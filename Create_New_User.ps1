#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 5738e7da-2980-4600-964d-6821aaf88926
# Source File: Create_New_User.psproj
#------------------------------------------------------------------------
#region Project Recovery Data (DO NOT MODIFY)
<#RecoveryData:
UwIAAB+LCAAAAAAABACFUl9PgzAcfF+y70D6aMJgOBmLrA+6YPbgNGP6ulT4IdXSkrbsj5/eQpmZ
UePLr732uMsdjdeQiR3I44JogocDx4kfpXiDTDvpkWelFJx+QD5HCWEKUHeYUKZBztHFqFbj63ZW
dsntMj5UrNsU3VRm2pMSWD3SB406I2P1DFJRwXEw8mPvBPo74wLLBb6aXkYwzYkbzCLfnYS+787C
Se6GUTAmpIiiWRDGXk/uP+0TbI41YCN8Dk/iguXGzvHO3VQPeujcNJSZ5D7CqSZSN3Ubxnr9xXTS
ksi2ro1sTFtrKEACzyBpeKZNuDla8p14B/eOiRfCtqYshO1etc39o/6LXlqKvXtPKE+ErIxegfAJ
tX/gm6AFNuZXLRY9SPpKOWEtYUUqwLcSiIbtCvbbJwXSaNWGH3s/iMNB7H17RJ8snuNcUwIAAA==#>
#endregion
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2018 v5.5.152
     Generated on:       6/6/2018 10:54 AM
     Generated by:       Jesse Savage
     Organization:       BBD
    --------------------------------------------------------------------------------
    .DESCRIPTION
        Script generated by PowerShell Studio 2018
#>



#region Source: Startup.pss
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
YQAAAB+LCAAAAAAABACzCUpNzi9LLap0SSxJVAAyijPz82yVjPUMlex4uRQUbPyLMtMz8xJz3DJz
Uv0Sc1PtgksSi0pKC/QKiott9DFkebls9JGNtAMAoyFkEGEAAAA=#>
#endregion
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
#endregion Import Assemblies

#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	#TODO: Add initialization script here (Load modules and check requirements)
	
	
	#--------------------------------------------------------------------------
	
	if((Show-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}


#endregion Source: Startup.pss

#region Source: Globals.ps1
	#--------------------------------------------
	# Declare Global Variables and Functions here
	#--------------------------------------------
	
	
	#Sample function that provides the location of the script
	function Get-ScriptDirectory
	{
	<#
		.SYNOPSIS
			Get-ScriptDirectory returns the proper location of the script.
	
		.OUTPUTS
			System.String
		
		.NOTES
			Returns the correct path within a packaged executable.
	#>
		[OutputType([string])]
		param ()
		if ($null -ne $hostinvocation)
		{
			Split-Path $hostinvocation.MyCommand.path
		}
		else
		{
			Split-Path $script:MyInvocation.MyCommand.Path
		}
	}
	
	#Sample variable that provides the location of the script
	[string]$ScriptDirectory = Get-ScriptDirectory
	
	
	
#endregion Source: Globals.ps1

#region Source: MainForm.psf
function Show-MainForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
OwUAAB+LCAAAAAAABABlVMuuqlgQnZPwDyd3StJsnkJy+iQgbxQUQYXZ5g0iIBsQ+Pr23p500jWq
1KqarLVqfXtZ0s3ZsCpwhF+fBlVd+/cv5i/q1w+OfX19u0NVVC1stKrJHPjMfo6warVueP7Vo/yb
/B/85+g3/mOkbk5Z2nwrgSTtXWUv/VuypDQ3jZrpWgryiAAkrTR6qgmSqVrdiwYNHLygv9EZtyaL
Pol6ibitGEQxHi0cC82j/Aas2r1eZ7OwiblKCE58x9OGjjlnmVZiGMq7pKplekTl6YIA3DxLW0hv
btC9tPgy3dfdOCg3hsexFxtmlbp27IHSmYQlnNQ7PYOu4e/6xe6aSEnphwlP3nWzd6pAqCI45ItA
d/Td5O/dKdyFvObKnMKVwhvHmO3KTQFhjpoCPO2Bwti/atRivT1zkN/jO+YvoWo3T2EnzS/PrveK
s3ooUyNKLqA96YYt7lBZ8Tbp2Ti2HM/2oVL8rS+Ijr0M6p3WCjM81cTMkYgv4K6E79RUdt3KmpTT
yL4EY48jyGI8b8fElU3uHs1ERqamiGNrkiCphX7+4djK6wyed5tzdGeScNjcB7qJTFtoJplj0gJ4
80T3PbqRkXbuaKloIHkLTtPUdh86fAXHLgvvv7wrUh1E+8NNksxRPEY7yWSzY2TojCxb1loSI6vy
T08nbJl7PZ4mE9SW5hsKw8ies16YjenlvYljc/PW3b2HdnRf3iJY5sdLMk/hfnLT4Bk82pRp3MGN
bTK9QRaoKYTkLuPmwHkdrlQDfhut+xjt0oasg2Pc0MdFF6x3i6S7wNmM/JZfTt6RLTSHsp/hrqHO
QaS757g/+2bORM1gA33fsKf25IZhUyWTuXb3NZymA47xDanSbb/eYRW0IYw6a6sDNaD51Xh0e+k0
uK9I10+2QAYTHYXJ8DamOB3gaHMN1VWC5RdZUn+M0IASx+RjTh+FZ7QPtCHTuOjUpaVv2fzDFOea
qVrHESc77qmdErTb7RE9xIi7MUDMqLxZen4ASNhAvYigic44BuvTHXXMLtPmOJYQ8ERbVCj6o7JV
ZhocA9XxKUcQh31C8wdxDN/pTKsoQ6xzECjDWw6ca1yZNZHbzy+QB7jU1xk6Paucx3ymUKe0dvE6
zRHKXGOtTVq42HNechONwimOWcK1l8GotW0/93J17UOfElh3MXwXx85NyN6S58jQsXOnh7sILGMT
kNakV+HRXw8JGIjeoQd/CxPgcdu4jndUvcA0bDqMwHiYA559D/ekAzGOtTm/BGz8fB6GRMqulw56
N6AuWQEA9dnbE0QYGxHDjA+TlS9nsJA+QWnuKmiJuPPDoG6fOTRavRtVEscqNJSGXScHB6C5iuVY
vFiZrEHjLEnf5J/w+hNjEkLZM26qDH2Rn8k3+d+w/PkHeO8u3DsFAAA=#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formNewUser = New-Object 'System.Windows.Forms.Form'
	$buttonOK = New-Object 'System.Windows.Forms.Button'
	$labelOrganizationUnit = New-Object 'System.Windows.Forms.Label'
	$checkedlistboxOU = New-Object 'System.Windows.Forms.CheckedListBox'
	$textboxDomainName = New-Object 'System.Windows.Forms.TextBox'
	$textbox1 = New-Object 'System.Windows.Forms.TextBox'
	$labelUsername = New-Object 'System.Windows.Forms.Label'
	$textboxDisplayName = New-Object 'System.Windows.Forms.TextBox'
	$labelDisplayName = New-Object 'System.Windows.Forms.Label'
	$textboxLastName = New-Object 'System.Windows.Forms.TextBox'
	$textboxMiddleInitial = New-Object 'System.Windows.Forms.TextBox'
	$textboxFirstName = New-Object 'System.Windows.Forms.TextBox'
	$labelLastName = New-Object 'System.Windows.Forms.Label'
	$labelMiddleInitial = New-Object 'System.Windows.Forms.Label'
	$labelFirstName = New-Object 'System.Windows.Forms.Label'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formNewUser_Load={
		#TODO: Initialize Form Controls here
		$OU = Get-ADOrganizationalUnit -Filter '*' | where { $_.DistinguishedName -match '_ActiveEmployees' }
		# $OU | foreach{ if ($_.Name -notmatch '_') { write-host $_.name } }
		$OU | foreach{
			if ($_.Name -notmatch '_')
			{
				$checkedlistboxOU.Items.Add($_.Name)		
			}
		}
	}
	
	#region Control Helper Functions
	function Update-ListBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ListBox or CheckedListBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ListBox control.
		
		.PARAMETER ListBox
			The ListBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ListBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER Append
			Adds the item(s) to the ListBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ListBox $ListBox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ListBox $listBox1 "Red" -Append
			Update-ListBox $listBox1 "White" -Append
			Update-ListBox $listBox1 "Blue" -Append
		
		.EXAMPLE
			Update-ListBox $listBox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ListBox]
			$ListBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]
			$DisplayMember,
			[switch]
			$Append
		)
		
		if (-not $Append)
		{
			$listBox.Items.Clear()
		}
		
		if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
		{
			$listBox.Items.AddRange($Items)
		}
		elseif ($Items -is [Array])
		{
			$listBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$listBox.Items.Add($obj)
			}
			$listBox.EndUpdate()
		}
		else
		{
			$listBox.Items.Add($Items)
		}
		
		$listBox.DisplayMember = $DisplayMember
	}
	#endregion
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formNewUser.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:MainForm_checkedlistboxOU = $checkedlistboxOU.SelectedItems
		$script:MainForm_textboxDomainName = $textboxDomainName.Text
		$script:MainForm_textbox1 = $textbox1.Text
		$script:MainForm_textboxDisplayName = $textboxDisplayName.Text
		$script:MainForm_textboxLastName = $textboxLastName.Text
		$script:MainForm_textboxMiddleInitial = $textboxMiddleInitial.Text
		$script:MainForm_textboxFirstName = $textboxFirstName.Text
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$formNewUser.remove_Load($formNewUser_Load)
			$formNewUser.remove_Load($Form_StateCorrection_Load)
			$formNewUser.remove_Closing($Form_StoreValues_Closing)
			$formNewUser.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formNewUser.SuspendLayout()
	#
	# formNewUser
	#
	$formNewUser.Controls.Add($buttonOK)
	$formNewUser.Controls.Add($labelOrganizationUnit)
	$formNewUser.Controls.Add($checkedlistboxOU)
	$formNewUser.Controls.Add($textboxDomainName)
	$formNewUser.Controls.Add($textbox1)
	$formNewUser.Controls.Add($labelUsername)
	$formNewUser.Controls.Add($textboxDisplayName)
	$formNewUser.Controls.Add($labelDisplayName)
	$formNewUser.Controls.Add($textboxLastName)
	$formNewUser.Controls.Add($textboxMiddleInitial)
	$formNewUser.Controls.Add($textboxFirstName)
	$formNewUser.Controls.Add($labelLastName)
	$formNewUser.Controls.Add($labelMiddleInitial)
	$formNewUser.Controls.Add($labelFirstName)
	$formNewUser.AutoScaleDimensions = '6, 13'
	$formNewUser.AutoScaleMode = 'Font'
	$formNewUser.ClientSize = '470, 377'
	$formNewUser.Name = 'formNewUser'
	$formNewUser.Text = 'New User'
	$formNewUser.add_Load($formNewUser_Load)
	#
	# buttonOK
	#
	$buttonOK.Location = '379, 342'
	$buttonOK.Name = 'buttonOK'
	$buttonOK.Size = '75, 23'
	$buttonOK.TabIndex = 13
	$buttonOK.Text = 'OK'
	$buttonOK.UseCompatibleTextRendering = $True
	$buttonOK.UseVisualStyleBackColor = $True
	#
	# labelOrganizationUnit
	#
	$labelOrganizationUnit.AutoSize = $True
	$labelOrganizationUnit.Location = '13, 187'
	$labelOrganizationUnit.Name = 'labelOrganizationUnit'
	$labelOrganizationUnit.Size = '95, 17'
	$labelOrganizationUnit.TabIndex = 12
	$labelOrganizationUnit.Text = 'Organization Unit:'
	$labelOrganizationUnit.UseCompatibleTextRendering = $True
	#
	# checkedlistboxOU
	#
	$checkedlistboxOU.FormattingEnabled = $True
	$checkedlistboxOU.Location = '12, 207'
	$checkedlistboxOU.Name = 'checkedlistboxOU'
	$checkedlistboxOU.Size = '229, 94'
	$checkedlistboxOU.TabIndex = 11
	$checkedlistboxOU.UseCompatibleTextRendering = $True
	#
	# textboxDomainName
	#
	$textboxDomainName.Location = '134, 150'
	$textboxDomainName.Name = 'textboxDomainName'
	$textboxDomainName.ReadOnly = $True
	$textboxDomainName.Size = '107, 20'
	$textboxDomainName.TabIndex = 10
	$textboxDomainName.Text = '@bbdes.org'
	#
	# textbox1
	#
	$textbox1.Location = '12, 150'
	$textbox1.Name = 'textbox1'
	$textbox1.Size = '116, 20'
	$textbox1.TabIndex = 9
	#
	# labelUsername
	#
	$labelUsername.AutoSize = $True
	$labelUsername.Location = '12, 130'
	$labelUsername.Name = 'labelUsername'
	$labelUsername.Size = '60, 17'
	$labelUsername.TabIndex = 8
	$labelUsername.Text = 'Username:'
	$labelUsername.UseCompatibleTextRendering = $True
	#
	# textboxDisplayName
	#
	$textboxDisplayName.Location = '13, 92'
	$textboxDisplayName.Name = 'textboxDisplayName'
	$textboxDisplayName.Size = '228, 20'
	$textboxDisplayName.TabIndex = 7
	#
	# labelDisplayName
	#
	$labelDisplayName.AutoSize = $True
	$labelDisplayName.Location = '12, 71'
	$labelDisplayName.Name = 'labelDisplayName'
	$labelDisplayName.Size = '78, 17'
	$labelDisplayName.TabIndex = 6
	$labelDisplayName.Text = 'Display Name:'
	$labelDisplayName.UseCompatibleTextRendering = $True
	#
	# textboxLastName
	#
	$textboxLastName.Location = '304, 32'
	$textboxLastName.Name = 'textboxLastName'
	$textboxLastName.Size = '150, 20'
	$textboxLastName.TabIndex = 5
	#
	# textboxMiddleInitial
	#
	$textboxMiddleInitial.Location = '200, 33'
	$textboxMiddleInitial.Name = 'textboxMiddleInitial'
	$textboxMiddleInitial.Size = '67, 20'
	$textboxMiddleInitial.TabIndex = 4
	#
	# textboxFirstName
	#
	$textboxFirstName.Location = '12, 33'
	$textboxFirstName.Name = 'textboxFirstName'
	$textboxFirstName.Size = '150, 20'
	$textboxFirstName.TabIndex = 3
	#
	# labelLastName
	#
	$labelLastName.AutoSize = $True
	$labelLastName.Location = '304, 13'
	$labelLastName.Name = 'labelLastName'
	$labelLastName.Size = '62, 17'
	$labelLastName.TabIndex = 2
	$labelLastName.Text = 'Last Name:'
	$labelLastName.UseCompatibleTextRendering = $True
	#
	# labelMiddleInitial
	#
	$labelMiddleInitial.AutoSize = $True
	$labelMiddleInitial.Location = '200, 13'
	$labelMiddleInitial.Name = 'labelMiddleInitial'
	$labelMiddleInitial.Size = '70, 17'
	$labelMiddleInitial.TabIndex = 1
	$labelMiddleInitial.Text = 'Middle Initial:'
	$labelMiddleInitial.UseCompatibleTextRendering = $True
	#
	# labelFirstName
	#
	$labelFirstName.AutoSize = $True
	$labelFirstName.Location = '13, 13'
	$labelFirstName.Name = 'labelFirstName'
	$labelFirstName.Size = '63, 17'
	$labelFirstName.TabIndex = 0
	$labelFirstName.Text = 'First Name:'
	$labelFirstName.UseCompatibleTextRendering = $True
	$formNewUser.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formNewUser.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formNewUser.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formNewUser.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$formNewUser.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $formNewUser.ShowDialog()

}
#endregion Source: MainForm.psf

#Start the application
Main ($CommandLine)
